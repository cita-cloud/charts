# Default values for cita-cloud-local-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# pvcName -- Name of persistentVolumeClaim.
pvcName: "local-pvc"

image:
  # image.pullPolicy -- pullPolicy for cita_cloud_config docker images.
  pullPolicy: IfNotPresent

config:
  # config.imageTag -- Image tag of cita-cloud-config container.
  imageTag: v6.3.3
  # config.chainName -- Chain name of cita-cloud blockchain that will be changed.
  chainName: test-chain

  action:
    # config.action.type -- Action of cita-cloud-config. If the chain's nodes are in a k8s cluster, you should use xxxSingle action; if the chain's nodes are in multi k8s clusters, you should use xxxMulti action; the clean action is universal.
    type: increaseSingle
    increaseSingle:
      # config.action.increaseSingle.kmsPassword -- KmsPassword for new node.
      kmsPassword: "123456"
    initMulti:
      # config.action.initMulti.superAdmin -- Super admin account address.
      superAdmin: 8f81961f263f45f88230375623394c9301c033e7
      # config.action.initMulti.kmsPasswordList -- KmsPassword of each chain node.
      kmsPasswordList: 123456,123456,123456
      # config.action.initMulti.nodeList -- NodeList of each chain node, format: [ip:port:domain].
      nodeList: 192.168.10.123:40000:node0,192.168.10.134:40000:node1,192.168.10.135:40000:node2
      # config.action.initMulti.blockInterval -- Chain's block interval.
      blockInterval: 3
      # config.action.initMulti.blockLimit -- Chain's block limit.
      blockLimit: 100
      # config.action.initMulti.logLevel -- Log level warn/info/debug/trace.
      logLevel: info
      # config.action.initMulti.networkImage -- Network: network_p2p/network_tls.
      networkImage: network_tls
      # config.action.initMulti.consensusImage -- Consensus: consensus_raft/consensus_bft.
      consensusImage: consensus_bft
      # config.action.initMulti.kmsImage -- Kms: kms_sm/kms_eth.
      kmsImage: kms_sm
    increaseMulti:
      # config.action.increaseMulti.kmsPassword -- KmsPassword for new node.
      kmsPassword: "123456"
      # config.action.increaseMulti.node -- New node, format: [ip:port:domain].
      node: 192.168.10.136:40000:node3
    decreaseMulti:
      # config.action.decreaseMulti.domain -- Set the domain you want to delete.
      domain: node2
