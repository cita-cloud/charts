apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "cita-cloud-local-cluster.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "cita-cloud-local-cluster.selectorLabels" . | nindent 6 }}
  serviceName: {{ printf "%s-headless-service" .Release.Name }}
  podManagementPolicy: "Parallel"
  template:
    metadata:
      labels: {{- include "cita-cloud-local-cluster.labels" . | nindent 8 }}
    spec:
      shareProcessNamespace: true
      initContainers:
      - image: {{ printf "citacloud/cloud-config:%s" .Values.config.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        name: cloud-config
        command:
          - "/data/cloud-config.sh"
        args:
          # super admin account
          - -a
          - {{ .Values.config.superAdmin }}
          # chain's name
          - -c
          - {{ .Release.Name }}
          # kms password list
          - -k
          - {{ .Values.config.kmsPasswordList | quote }}
          # replicaCount
          - -r
          - {{ .Values.replicaCount | quote }}
          # block interval
          - -i
          - {{ .Values.config.blockInterval | quote }}
          # block limit
          - -l
          - {{ .Values.config.blockLimit | quote }}
          # network image
          - -x
          - {{ .Values.network.imageName }}
          # consensus image
          - -y
          - {{ .Values.consensus.imageName }}
          # kms image
          - -z
          - {{ .Values.kms.imageName }}
        volumeMounts:
        - name: datadir
          mountPath: /data
        - name: cloud-config-shell
          mountPath: /data/cloud-config.sh
          subPath: cloud-config.sh
      containers:
      {{- if .Values.debug.enabled }}
      - image: {{ printf "%s:%s" .Values.debug.imageName .Values.debug.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        name: debug
        ports:
        - containerPort: 9999
          protocol: TCP
          name: debug
        env:
        - name: HTTP_PORT
          value: '9999'
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      {{- end }}
      - name: network
        image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.network.imageName }}:{{ .Values.network.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 40000
          protocol: TCP
          name: network
        - containerPort: 50000
          protocol: TCP
          name: grpc
        command:
        - sh
        - -c
        - network run
        workingDir: /data
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      - name: consensus
        image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.consensus.imageName }}:{{ .Values.consensus.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 50001
          protocol: TCP
          name: grpc
        command:
        - sh
        - -c
        {{- if eq .Values.consensus.imageName "consensus_raft" }}
        - consensus run --stdout
        {{- else }}
        - consensus run
        {{- end }}
        workingDir: /data
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      {{- if contains "chaincode" .Values.executor.imageName }}
      - image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.executor.imageName }}:{{ .Values.executor.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        name: executor
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 50002
          protocol: TCP
          name: grpc
        - containerPort: 7052
          protocol: TCP
          name: chaincode
        - containerPort: 7053
          protocol: TCP
          name: eventhub
        command:
        - sh
        - -c
        - executor run -p 50002 --couchdb-username citacloud --couchdb-password citacloud
        workingDir: /data
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      - image: {{ printf "%s:%s" .Values.stateDB.imageName .Values.stateDB.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        name: stateDB
        ports:
        - containerPort: 5984
          protocol: TCP
          name: couchdb
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)/state-data
          mountPath: /opt/couchdb/data
        env:
        - name: COUCHDB_USER
          value: citacloud
        - name: COUCHDB_PASSWORD
          value: citacloud
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      {{- else }}
      - image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.executor.imageName }}:{{ .Values.executor.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        name: executor
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 50002
          protocol: TCP
          name: grpc
        command:
        - sh
        - -c
        - executor run
        workingDir: /data
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      {{- end }}
      - image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.storage.imageName }}:{{ .Values.storage.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        name: storage
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 50003
          protocol: TCP
          name: grpc
        command:
        - sh
        - -c
        - storage run
        workingDir: /data
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      - image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.controller.imageName }}:{{ .Values.controller.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        name: controller
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 50004
          protocol: TCP
          name: grpc
        command:
        - sh
        - -c
        - controller run
        workingDir: /data
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      - name: kms
        image: {{ .Values.global.registry }}/{{ .Values.global.repository }}/{{ .Values.kms.imageName }}:{{ .Values.kms.imageTag }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - containerPort: 50005
          protocol: TCP
          name: grpc
        command:
        - sh
        - -c
        - kms run
        workingDir: /data
        volumeMounts:
        - name: datadir
          subPathExpr: $(POD_NAME)
          mountPath: /data
      volumes:
      - name: cloud-config-shell
        configMap:
          name: {{ .Release.Name }}-cloud-config-shell
          defaultMode: 0744
      - name: datadir
        persistentVolumeClaim:
          claimName: {{ .Values.pvcName | quote }}
